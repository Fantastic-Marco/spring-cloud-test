server.port=8110
spring.application.name=message-bus

#续费任务调用间隔
eureka.instance.lease-renewal-interval-in-seconds=10
#服务失效时间
eureka.instance.lease-expiration-duration-in-seconds=90
#服务中心地址
eureka.client.serviceUrl.defaultZone=http://localhost:1111/eureka/

#spring.cloud.stream.kafka.binder.brokers= "192.168.154.129:9092,192.168.154.129:9093,192.168.154.129:9094,192.168.154.129:9095"
#spring.cloud.stream.kafka.binder.zk-nodes= "192.168.154.129:2181"

#============== kafka ===================
# 指定kafka 代理地址，可以多个
spring.kafka.bootstrap-servers=192.168.154.129:9092,192.168.154.129:9093,192.168.154.129:9094,192.168.154.129:9095
#=============== provider  =======================
spring.kafka.producer.retries=0
# 每次批量发送消息的数量
spring.kafka.producer.batch-size=16384
spring.kafka.producer.buffer-memory=33554432

# 指定消息key和消息体的编解码方式
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer

#=============== consumer  =======================
# 指定默认消费者group id
spring.kafka.consumer.group-id=test-consumer-group

spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.enable-auto-commit=true
spring.kafka.consumer.auto-commit-interval=100

# 指定消息key和消息体的编解码方式
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
